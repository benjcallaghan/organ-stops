{
  "name": "app",
  "sourceRoot": "apps/app/src",
  "projectType": "application",
  "prefix": "app",
  "generators": {},
  "targets": {
    "build": {
      "executor": "@angular-devkit/build-angular:browser",
      "options": {
        "outputPath": "dist/apps/app",
        "index": "apps/app/src/index.html",
        "main": "apps/app/src/main.ts",
        "polyfills": "apps/app/src/polyfills.ts",
        "tsConfig": "apps/app/tsconfig.app.json",
        "assets": [
          {
            "glob": "**/*",
            "input": "apps/app/src/assets",
            "output": "assets"
          },
          {
            "glob": "**/*.svg",
            "input": "node_modules/ionicons/dist/ionicons/svg",
            "output": "./svg"
          },
          "apps/app/src/manifest.webmanifest"
        ],
        "styles": [
          {
            "input": "apps/app/src/theme/variables.scss",
            "inject": true
          },
          {
            "input": "apps/app/src/global.scss",
            "inject": true
          }
        ],
        "scripts": [],
        "aot": false,
        "vendorChunk": true,
        "extractLicenses": false,
        "buildOptimizer": false,
        "sourceMap": true,
        "optimization": false,
        "namedChunks": true,
        "serviceWorker": true,
        "ngswConfigPath": "apps/app/ngsw-config.json"
      },
      "configurations": {
        "production": {
          "fileReplacements": [
            {
              "replace": "apps/app/src/environments/environment.ts",
              "with": "apps/app/src/environments/environment.prod.ts"
            }
          ],
          "optimization": true,
          "outputHashing": "all",
          "sourceMap": false,
          "namedChunks": false,
          "aot": true,
          "extractLicenses": true,
          "vendorChunk": false,
          "buildOptimizer": true,
          "budgets": [
            {
              "type": "initial",
              "maximumWarning": "2mb",
              "maximumError": "5mb"
            }
          ]
        },
        "ci": {
          "progress": false
        }
      },
      "defaultConfiguration": ""
    },
    "serve": {
      "executor": "@angular-devkit/build-angular:dev-server",
      "options": {
        "browserTarget": "app:build"
      },
      "configurations": {
        "production": {
          "browserTarget": "app:build:production"
        },
        "ci": {}
      }
    },
    "extract-i18n": {
      "executor": "@angular-devkit/build-angular:extract-i18n",
      "options": {
        "browserTarget": "app:build"
      }
    },
    "test": {
      "executor": "@angular-devkit/build-angular:karma",
      "options": {
        "main": "apps/app/src/test.ts",
        "polyfills": "apps/app/src/polyfills.ts",
        "tsConfig": "apps/app/tsconfig.spec.json",
        "karmaConfig": "apps/app/karma.conf.js",
        "styles": [],
        "scripts": [],
        "assets": [
          {
            "glob": "favicon.ico",
            "input": "apps/app/src/",
            "output": "/"
          },
          {
            "glob": "**/*",
            "input": "apps/app/src/assets",
            "output": "/assets"
          },
          "apps/app/src/manifest.webmanifest"
        ]
      },
      "configurations": {
        "ci": {
          "progress": false,
          "watch": false
        }
      }
    },
    "lint": {
      "executor": "@nrwl/linter:eslint",
      "options": {
        "lintFilePatterns": ["apps/app/**/*.ts", "apps/app/**/*.html"]
      }
    },
    "deploy": {
      "executor": "nx:run-commands",
      "outputs": [],
      "dependsOn": ["build"],
      "options": {
        "command": "echo Deployments can only be performed with the production configuration. && exit 1",
        "cwd": "apps/app"
      },
      "configurations": {
        "production": {
          "command": "npx firebase deploy"
        }
      }
    },
    "cap": {
      "executor": "@nxext/capacitor:cap",
      "options": {
        "cmd": "--help"
      }
    },
    "add": {
      "executor": "@nxext/capacitor:cap",
      "options": {
        "cmd": "add"
      },
      "configurations": {
        "ios": {
          "cmd": "add ios"
        },
        "android": {
          "cmd": "add android"
        }
      }
    },
    "copy": {
      "executor": "@nxext/capacitor:cap",
      "options": {
        "cmd": "copy"
      },
      "configurations": {
        "ios": {
          "cmd": "copy ios"
        },
        "android": {
          "cmd": "copy android"
        }
      }
    },
    "open": {
      "executor": "@nxext/capacitor:cap",
      "options": {
        "cmd": "open"
      },
      "configurations": {
        "ios": {
          "cmd": "open ios"
        },
        "android": {
          "cmd": "open android"
        }
      }
    },
    "run": {
      "executor": "@nxext/capacitor:cap",
      "options": {
        "cmd": "run"
      },
      "configurations": {
        "ios": {
          "cmd": "run ios"
        },
        "android": {
          "cmd": "run android"
        }
      }
    },
    "sync": {
      "executor": "@nxext/capacitor:cap",
      "options": {
        "cmd": "sync"
      },
      "configurations": {
        "ios": {
          "cmd": "sync ios"
        },
        "android": {
          "cmd": "sync android"
        }
      }
    },
    "update": {
      "executor": "@nxext/capacitor:cap",
      "options": {
        "cmd": "update"
      },
      "configurations": {
        "ios": {
          "cmd": "update ios"
        },
        "android": {
          "cmd": "update android"
        }
      }
    }
  }
}
